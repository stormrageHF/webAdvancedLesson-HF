// 说明 var let const 三种声明方式之间的具体差别

/*
 var 声明的变量会受限于全局作用域和函数作用域，并不会受限于块级作用域；
 var 声明的变量会有变量提升；
 var 声明的变量可以被var重复声明，不会报错；


 let和const 声明的变量只在它们所在的代码块中有效
 let和const 不能重复声明
 let 和 const 不存在变量提升
 暂时性死区：ES6 明确规定，代码块内如果存在 let 或者 const，代码块会对这些命令声明的变量从块的开始就形成一个封闭作用域。
 代码块内，在声明变量之前使用它会报错。


 const 声明一个只读的常量，一旦声明，常量值不能改变；
 const 其实保证的不是变量的值不变，而是保证变量指向的内存地址所保存的数据不允许改动；
 所以 const 声明简单类型（数值 number、字符串 string 、布尔值 boolean）那就真的和常量一样，
 而复杂类型（对象 object，数组 array，函数 function），变量指向的内存地址其实是保存了一个指向实际数据的指针，
 所以 const 只能保证指针是固定的，至于指针指向的数据结构变不变就无法控制了
 

*/